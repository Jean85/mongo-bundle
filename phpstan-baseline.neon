parameters:
	ignoreErrors:
		-
			message: "#^Parameter \\#1 \\$event of method Symfony\\\\Contracts\\\\EventDispatcher\\\\EventDispatcherInterface\\:\\:dispatch\\(\\) expects object, string given\\.$#"
			count: 2
			path: src/Capsule/Collection.php

		-
			message: "#^Parameter \\#2 \\$eventName of method Symfony\\\\Contracts\\\\EventDispatcher\\\\EventDispatcherInterface\\:\\:dispatch\\(\\) expects string\\|null, Facile\\\\MongoDbBundle\\\\Event\\\\QueryEvent given\\.$#"
			count: 2
			path: src/Capsule/Collection.php

		-
			message: "#^Variable \\$data on left side of \\?\\? always exists and is not nullable\\.$#"
			count: 1
			path: src/Capsule/Collection.php

		-
			message: "#^Variable \\$filters on left side of \\?\\? always exists and is not nullable\\.$#"
			count: 1
			path: src/Capsule/Collection.php

		-
			message: "#^PHPDoc tag @var has invalid value \\(\\$profiler \\\\Symfony\\\\Component\\\\HttpKernel\\\\Profiler\\\\Profiler\\)\\: Unexpected token \"\\$profiler\", expected type at offset 9$#"
			count: 1
			path: src/Controller/ProfilerController.php

		-
			message: "#^Property Facile\\\\MongoDbBundle\\\\Controller\\\\ProfilerController\\:\\:\\$container \\(Symfony\\\\Component\\\\DependencyInjection\\\\Container\\) does not accept Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface\\|null\\.$#"
			count: 1
			path: src/Controller/ProfilerController.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\DataCollector\\\\MongoQuerySerializer\\:\\:prepareUnserializableData\\(\\) never returns object so it can be removed from the return type\\.$#"
			count: 1
			path: src/DataCollector/MongoQuerySerializer.php

		-
			message: "#^Call to an undefined method Symfony\\\\Component\\\\Config\\\\Definition\\\\Builder\\\\NodeDefinition\\:\\:children\\(\\)\\.$#"
			count: 3
			path: src/DependencyInjection/Configuration.php

		-
			message: "#^Call to an undefined method Symfony\\\\Component\\\\Config\\\\Definition\\\\Builder\\\\TreeBuilder\\:\\:root\\(\\)\\.$#"
			count: 1
			path: src/DependencyInjection/Configuration.php

		-
			message: "#^Variable \\$data on left side of \\?\\? always exists and is not nullable\\.$#"
			count: 1
			path: src/Models/Query.php

		-
			message: "#^Variable \\$filters on left side of \\?\\? always exists and is not nullable\\.$#"
			count: 1
			path: src/Models/Query.php

		-
			message: "#^Parameter \\#1 \\$event of method Symfony\\\\Contracts\\\\EventDispatcher\\\\EventDispatcherInterface\\:\\:dispatch\\(\\) expects object, string given\\.$#"
			count: 1
			path: src/Services/ClientRegistry.php

		-
			message: "#^Parameter \\#2 \\$eventName of method Symfony\\\\Contracts\\\\EventDispatcher\\\\EventDispatcherInterface\\:\\:dispatch\\(\\) expects string\\|null, Facile\\\\MongoDbBundle\\\\Event\\\\ConnectionEvent given\\.$#"
			count: 1
			path: src/Services/ClientRegistry.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Services\\\\Loggers\\\\DataCollectorLoggerInterface\\:\\:getConnections\\(\\) has invalid return type string\\.$#"
			count: 1
			path: src/Services/Loggers/DataCollectorLoggerInterface.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Services\\\\Loggers\\\\MongoQueryLogger\\:\\:getConnections\\(\\) has invalid return type string\\.$#"
			count: 1
			path: src/Services/Loggers/MongoQueryLogger.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Services\\\\Loggers\\\\MongoQueryLogger\\:\\:getConnections\\(\\) should return array\\<string\\> but returns array\\<string\\>\\.$#"
			count: 1
			path: src/Services/Loggers/MongoQueryLogger.php

		-
			message: "#^Class Twig_Extension not found\\.$#"
			count: 1
			path: src/Twig/FacileMongoDbBundleExtension.php

		-
			message: "#^Class Twig_Function not found\\.$#"
			count: 1
			path: src/Twig/FacileMongoDbBundleExtension.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Twig\\\\FacileMongoDbBundleExtension\\:\\:getFunctions\\(\\) has invalid return type Twig_SimpleFunction\\.$#"
			count: 1
			path: src/Twig/FacileMongoDbBundleExtension.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Twig\\\\FacileMongoDbBundleExtension\\:\\:getFunctions\\(\\) should return array\\<Twig_SimpleFunction\\> but returns array\\<int, Twig\\\\TwigFunction\\>\\.$#"
			count: 1
			path: src/Twig/FacileMongoDbBundleExtension.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Tests\\\\Fixtures\\\\DataFixtures\\\\TestFixtures\\:\\:loadData\\(\\) should return array but return statement is missing\\.$#"
			count: 1
			path: tests/Fixtures/DataFixtures/TestFixtures.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Tests\\\\Fixtures\\\\DataFixtures\\\\TestFixtures\\:\\:loadIndexes\\(\\) should return array but return statement is missing\\.$#"
			count: 1
			path: tests/Fixtures/DataFixtures/TestFixtures.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Tests\\\\Fixtures\\\\DataFixtures\\\\TestOrderedMongoFixtures2\\:\\:loadData\\(\\) should return array but return statement is missing\\.$#"
			count: 1
			path: tests/Fixtures/DataFixtures/TestOrderedMongoFixtures2.php

		-
			message: "#^Method Facile\\\\MongoDbBundle\\\\Tests\\\\Fixtures\\\\DataFixtures\\\\TestOrderedMongoFixtures2\\:\\:loadIndexes\\(\\) should return array but return statement is missing\\.$#"
			count: 1
			path: tests/Fixtures/DataFixtures/TestOrderedMongoFixtures2.php

		-
			message: "#^Property Facile\\\\MongoDbBundle\\\\Tests\\\\Functional\\\\AppTestCase\\:\\:\\$application \\(Symfony\\\\Bundle\\\\FrameworkBundle\\\\Console\\\\Application\\) does not accept null\\.$#"
			count: 1
			path: tests/Functional/AppTestCase.php

		-
			message: "#^Comparison operation \"\\>\\=\" between 1 and 0 is always true\\.$#"
			count: 1
			path: tests/Functional/TestApp/TestKernel.php

		-
			message: "#^Access to an undefined property MongoDB\\\\Model\\\\BSONDocument\\:\\:\\$fqcn\\.$#"
			count: 1
			path: tests/Unit/DataCollector/MongoQuerySerializerTest.php

